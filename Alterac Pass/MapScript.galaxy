//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Alterac Pass
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/HeroesLib"
include "TriggerLibs/GameLib"
include "TriggerLibs/MapMechanicsLib"
include "TriggerLibs/AILib"
include "TriggerLibs/UILib"
include "TriggerLibs/StartingExperienceLib"
include "TriggerLibs/SoundLib"
include "TriggerLibs/GameDataHelperLib"
include "TriggerLibs/SupportLib"
include "Lib7EB401DE"
include "LibMMAP"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libCore_InitLib();
    libGame_InitLib();
    libMapM_InitLib();
    libAIAI_InitLib();
    libUIUI_InitLib();
    libStEx_InitLib();
    libSond_InitLib();
    libGDHL_InitLib();
    libSprt_InitLib();
    lib7EB401DE_InitLib();
    libMMAP_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_HookupGlobalVariables ();
void gf_HookupMechanicsVariables ();
void gf_HookupLaneData ();
void gf_HookupJungleCreepData ();
void gf_HookupTownData ();
void gf_HookupRegionData ();

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_InitializeMap;
trigger gt_UnitEntersOrderBossArena;
trigger gt_UnitLeavesOrderBossArena;
trigger gt_UnitEntersChaosBossArena;
trigger gt_UnitLeavesChaosBossArena;
trigger gt_OrderBossIsAggro;
trigger gt_ChaosBossIsAggro;
trigger gt_OrderBossLeashes;
trigger gt_ChaosBossLeashes;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_HookupGlobalVariables () {
    // Automatic Variable Declarations
    // Implementation
    libCore_gv_mAPMapStringID = "AlteracPass";
    libGame_gv_teams[libGame_gv_teamOrderIndex_C].lv_core = UnitFromId(62621071);
    libGame_gv_teams[libGame_gv_teamChaosIndex_C].lv_core = UnitFromId(1868035703);
    libCore_gv_mAPOrderBaseRegion = RegionFromId(15);
    libCore_gv_mAPChaosBaseRegion = RegionFromId(19);
    libCore_gv_mAPMapSoundtrack[0] = "MX_AlteracPass_Intro";
    libCore_gv_mAPMapSoundtrack[1] = "MX_AlteracPass_LVL01";
    libCore_gv_mAPMapSoundtrack[2] = "MX_AlteracPass_LVL10";
    libCore_gv_mAPMapSoundtrack[3] = "MX_AlteracPass_LVL20";
}

void gf_HookupMechanicsVariables () {
    // Automatic Variable Declarations
    // Implementation
    libMMAP_gf_InitializeMapData(libGame_gv_teamOrderIndex_C, RegionFromId(7), RegionFromId(31), UnitFromId(1749), UnitFromId(154), UnitFromId(1742), PointFromId(540), PointFromId(536), PointFromId(371));
    libMMAP_gf_InitializeMapData(libGame_gv_teamChaosIndex_C, RegionFromId(10), RegionFromId(27), UnitFromId(159), UnitFromId(199), UnitFromId(318), PointFromId(80), PointFromId(542), PointFromId(380));
    libMMAP_gf_InitializeFlagData(libGame_gv_teamOrderIndex_C, 1, RegionFromId(14), RegionFromId(18), UnitFromId(2044190534), UnitFromId(1366539221), PointFromId(658393006), PointFromId(1255741092), PointFromId(103082292), PointFromId(1487638225), PointFromId(1174869702), PointFromId(972741736), DoodadFromId(2092678089), DoodadFromId(292791405), DoodadFromId(1809258697), DoodadFromId(1583787706));
    libMMAP_gf_InitializeFlagData(libGame_gv_teamChaosIndex_C, 2, RegionFromId(9), RegionFromId(11), UnitFromId(2048260474), UnitFromId(2091140889), PointFromId(1688368539), PointFromId(1088685810), PointFromId(1381324460), PointFromId(1952817152), PointFromId(651266362), PointFromId(1340381924), DoodadFromId(2056960853), DoodadFromId(1808382616), DoodadFromId(1014625144), DoodadFromId(1560041245));
    libMMAP_gf_InitializeFlagData(libGame_gv_teamOrderIndex_C, 2, RegionFromId(1), RegionFromId(32), UnitFromId(1169257738), UnitFromId(667341288), PointFromId(2147252138), PointFromId(141548125), PointFromId(130114669), PointFromId(1116917788), PointFromId(1271821579), PointFromId(2006959542), DoodadFromId(1946992908), DoodadFromId(153500476), DoodadFromId(923913290), DoodadFromId(2124359814));
    libMMAP_gf_InitializeFlagData(libGame_gv_teamChaosIndex_C, 1, RegionFromId(24), RegionFromId(25), UnitFromId(94675851), UnitFromId(182671056), PointFromId(2097697425), PointFromId(1897522532), PointFromId(1502816971), PointFromId(999155690), PointFromId(1154267408), PointFromId(269333009), DoodadFromId(825472013), DoodadFromId(807550463), DoodadFromId(876468907), DoodadFromId(951252436));
}

void gf_HookupLaneData () {
    // Variable Declarations
    int lv_structureCount;
    int lv_waypointCount;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libGame_gv_laneCount += 1;
    lv_structureCount = 0;
    lv_waypointCount = 0;
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneName = StringExternal("Param/Value/6D0EDA58");
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneNamePreset = libGame_ge_LaneNamePresets_Top;
    lv_structureCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_orderStructures[lv_structureCount] = UnitFromId(62621071);
    libGame_gv_laneData[libGame_gv_laneCount].lv_chaosStructures[lv_structureCount] = UnitFromId(1868035703);
    libGame_gv_laneData[libGame_gv_laneCount].lv_structureCount = lv_structureCount;
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2350);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(540);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(542134713);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(853);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(579);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2117);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2119);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(580);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2121);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2124);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2126);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(581);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2127);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(66);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(3549);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(3551);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2140);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2138);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(582);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2136);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(53);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2134);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2131);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(78);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2130);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1616894785);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1287600187);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(871762984);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(559629121);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2002460335);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(33046278);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(381441917);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(863417193);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1606394809);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1538732485);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(386888196);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(80);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2351);
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypointCount = lv_waypointCount;
    libGame_gv_laneCount += 1;
    lv_structureCount = 0;
    lv_waypointCount = 0;
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneName = StringExternal("Param/Value/B9F45D96");
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneNamePreset = libGame_ge_LaneNamePresets_Middle;
    lv_structureCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_orderStructures[lv_structureCount] = UnitFromId(62621071);
    libGame_gv_laneData[libGame_gv_laneCount].lv_chaosStructures[lv_structureCount] = UnitFromId(1868035703);
    libGame_gv_laneData[libGame_gv_laneCount].lv_structureCount = lv_structureCount;
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2350);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(536);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1290359041);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2141);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(822);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2145);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2149);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(823);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2144);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2151);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2152);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(824);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2155);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2157);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(825);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2156);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2154);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(34);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2153);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2150);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2143);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(37);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2148);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2147);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(112);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2142);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2052289387);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(542);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2351);
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypointCount = lv_waypointCount;
    libGame_gv_laneCount += 1;
    lv_structureCount = 0;
    lv_waypointCount = 0;
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneName = StringExternal("Param/Value/77CDF15B");
    libGame_gv_laneData[libGame_gv_laneCount].lv_laneNamePreset = libGame_ge_LaneNamePresets_Bottom;
    lv_structureCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_orderStructures[lv_structureCount] = UnitFromId(62621071);
    libGame_gv_laneData[libGame_gv_laneCount].lv_chaosStructures[lv_structureCount] = UnitFromId(1868035703);
    libGame_gv_laneData[libGame_gv_laneCount].lv_structureCount = lv_structureCount;
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2350);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(371);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(406258506);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1493391275);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1180891669);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1006582089);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1838616187);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(641992201);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(633095704);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1925331034);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(1177774367);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(51680444);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(444543403);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2129);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(372);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2132);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2133);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(373);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2135);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(374);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2137);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2139);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(3552);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(3550);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(375);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2128);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(376);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2125);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2123);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2122);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(377);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2120);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2118);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(378);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2114);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(866643563);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(380);
    lv_waypointCount += 1;
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypoints[lv_waypointCount] = PointFromId(2351);
    libGame_gv_laneData[libGame_gv_laneCount].lv_waypointCount = lv_waypointCount;
}

void gf_HookupJungleCreepData () {
    // Variable Declarations
    int lv_jungleCamp;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_jungleCamp += 1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampType = libMapM_ge_JungleCampTypes_MercCamp;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampDefenderType = libMapM_ge_JungleCampDefenderTypes_SiegeCamp1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampCaptainSpawnPoint = PointFromId(180);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[1] = PointFromId(177);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[2] = PointFromId(178);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[3] = PointFromId(1402347327);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderLeashRegion = RegionFromId(28);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_defenderDefendersCoweronDeath = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataMercSpawnType = libMapM_ge_JungleCampMercTypes_SiegeCamp1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamOrderIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamChaosIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercOrderMercCampPathing[1].lv_waypoint = PointFromId(2145);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercChaosMercCampPathing[1].lv_waypoint = PointFromId(2145);
    lv_jungleCamp += 1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampType = libMapM_ge_JungleCampTypes_MercCamp;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampDefenderType = libMapM_ge_JungleCampDefenderTypes_GraveGolem;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampCaptainSpawnPoint = PointFromId(1367);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[1] = PointFromId(1047);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderLeashRegion = RegionFromId(20);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataMercSpawnType = libMapM_ge_JungleCampMercTypes_GraveGolem;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamOrderIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamChaosIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercOrderMercCampPathing[1].lv_waypoint = PointFromId(2140);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercChaosMercCampPathing[1].lv_waypoint = PointFromId(582);
    lv_jungleCamp += 1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampType = libMapM_ge_JungleCampTypes_MercCamp;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampDefenderType = libMapM_ge_JungleCampDefenderTypes_SiegeCamp1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampCaptainSpawnPoint = PointFromId(761820704);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[1] = PointFromId(1331179515);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[2] = PointFromId(1894446790);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[3] = PointFromId(1523525226);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderLeashRegion = RegionFromId(6);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_defenderDefendersCoweronDeath = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataMercSpawnType = libMapM_ge_JungleCampMercTypes_SiegeCamp1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamOrderIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamChaosIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercOrderMercCampPathing[1].lv_waypoint = PointFromId(2147);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercChaosMercCampPathing[1].lv_waypoint = PointFromId(2147);
    lv_jungleCamp += 1;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampType = libMapM_ge_JungleCampTypes_MercCamp;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampDefenderType = libMapM_ge_JungleCampDefenderTypes_GraveGolem;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataCampCaptainSpawnPoint = PointFromId(1440);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderSpawnPoints[1] = PointFromId(1126);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataDefenderLeashRegion = RegionFromId(23);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mapDataMercSpawnType = libMapM_ge_JungleCampMercTypes_GraveGolem;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamOrderIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercMercCampHasSingleWaypoint[libGame_gv_teamChaosIndex_C] = true;
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercOrderMercCampPathing[1].lv_waypoint = PointFromId(374);
    libMapM_gv_jungleCreepCamps[lv_jungleCamp].lv_mercChaosMercCampPathing[1].lv_waypoint = PointFromId(2139);
    libMapM_gv_jungleNumberOfCreepCamps = lv_jungleCamp;
}

void gf_HookupTownData () {
    // Variable Declarations
    int lv_lane;
    int lv_town;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_lane = 1;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(2);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(4);
    lv_lane = 2;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(12);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(13);
    lv_lane = 3;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(16);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamOrder;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(8);
    lv_lane = 1;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(17);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(21);
    lv_lane = 2;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(30);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(22);
    lv_lane = 3;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(29);
    libGame_gv_townTownData[lv_town].lv_makesCoreVulnerableWhenKilled = true;
    lv_town += 1;
    libGame_gv_townTownData[lv_town].lv_lane = lv_lane;
    libGame_gv_townTownData[lv_town].lv_owner = libCore_gv_cOMPUTER_TeamChaos;
    libGame_gv_townTownData[lv_town].lv_townRegion = RegionFromId(33);
    libGame_gv_townTownCount = lv_town;
}

void gf_HookupRegionData () {
    // Automatic Variable Declarations
    // Implementation
    libMapM_gf_MapSetRepulseRegion(libGame_gv_teamOrderIndex_C, RegionFromId(3), PointFromId(638), PointFromId(4101), PointFromId(4100), null);
    libMapM_gf_MapSetRepulseRegion(libGame_gv_teamChaosIndex_C, RegionFromId(5), PointFromId(1034), PointFromId(4096), PointFromId(4097), null);
    libMapM_gf_MapSetSafeRegion(libGame_gv_teamOrderIndex_C, RegionFromId(3));
    libMapM_gf_MapSetSafeRegion(libGame_gv_teamChaosIndex_C, RegionFromId(5));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Map
//--------------------------------------------------------------------------------------------------
bool gt_InitializeMap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(libAIAI_gt_IncludeAI, true, false);
    TriggerExecute(libGame_gt_IncludeGame, true, false);
    TriggerExecute(libGDHL_gt_IncludeGameDataHelper, true, false);
    TriggerExecute(libMapM_gt_IncludeMapMechanics, true, false);
    TriggerExecute(libStEx_gt_IncludeStartingExperience, true, false);
    TriggerExecute(libSond_gt_IncludeSound, true, false);
    TriggerExecute(libSprt_gt_IncludeSupport, true, false);
    TriggerExecute(libUIUI_gt_IncludeUI, true, false);
    lib7EB401DE_gf_InitializeHellbatMercType(libMapM_ge_JungleCampMercTypes_SiegeCamp1, 60.0, 90.0);
    lib7EB401DE_gf_InitializeMountainGiant(libMapM_ge_JungleCampMercTypes_GraveGolem);
    gf_HookupGlobalVariables();
    gf_HookupMechanicsVariables();
    gf_HookupLaneData();
    gf_HookupJungleCreepData();
    gf_HookupTownData();
    gf_HookupRegionData();
    lib7EB401DE_gf_InitializeSpiritHealerForTeam(UnitFromId(352279534), libGame_gv_teamOrderIndex_C);
    lib7EB401DE_gf_InitializeSpiritHealerForTeam(UnitFromId(1069476167), libGame_gv_teamChaosIndex_C);
    libCore_gv_sYSTowns = true;
    libCore_gv_sYSJungleCreepCamps = true;
    libCore_gv_sYSJungleWatchTowers = true;
    libCore_gv_sYSTowerAI = true;
    libCore_gv_sYSMinionAI = true;
    TriggerExecute(libCore_gt_InitializeStormMod, true, false);
    libCore_gf_DataAnnouncerVOSetDefaultAnnouncerForPlayerGroup(libGame_gf_PlayersOnTeamHeroes(libGame_gv_teamOrderIndex_C, false), "VanndarA");
    libCore_gf_DataAnnouncerVOSetDefaultAnnouncerForPlayerGroup(libGame_gf_PlayersOnTeamHeroes(libGame_gv_teamChaosIndex_C, false), "DrekTharA");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeMap_Init () {
    gt_InitializeMap = TriggerCreate("gt_InitializeMap_Func");
    TriggerAddEventMapInit(gt_InitializeMap);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit Enters Order Boss Arena
//--------------------------------------------------------------------------------------------------
bool gt_UnitEntersOrderBossArena_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_eventUnit;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eventUnit = EventUnit();

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(lv_eventUnit, "IsInCoreArena") == false))) {
            return false;
        }

        if (!((UnitFilterMatch(lv_eventUnit, libCore_gv_cOMPUTER_TeamOrder, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(lv_eventUnit, "IsInCoreArena", lv_eventUnit, 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnitEntersOrderBossArena_Init () {
    gt_UnitEntersOrderBossArena = TriggerCreate("gt_UnitEntersOrderBossArena_Func");
    TriggerAddEventUnitRegion(gt_UnitEntersOrderBossArena, null, RegionFromId(31), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit Leaves Order Boss Arena
//--------------------------------------------------------------------------------------------------
bool gt_UnitLeavesOrderBossArena_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_eventUnit;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eventUnit = EventUnit();

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(lv_eventUnit, "IsInCoreArena") == true))) {
            return false;
        }

        if (!((UnitFilterMatch(lv_eventUnit, libCore_gv_cOMPUTER_TeamOrder, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(lv_eventUnit, "IsInCoreArena", c_unitBehaviorCountAll);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnitLeavesOrderBossArena_Init () {
    gt_UnitLeavesOrderBossArena = TriggerCreate("gt_UnitLeavesOrderBossArena_Func");
    TriggerAddEventUnitRegion(gt_UnitLeavesOrderBossArena, null, RegionFromId(31), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit Enters Chaos Boss Arena
//--------------------------------------------------------------------------------------------------
bool gt_UnitEntersChaosBossArena_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_eventUnit;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eventUnit = EventUnit();

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(lv_eventUnit, "IsInCoreArena") == false))) {
            return false;
        }

        if (!((UnitFilterMatch(lv_eventUnit, libCore_gv_cOMPUTER_TeamChaos, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(lv_eventUnit, "IsInCoreArena", lv_eventUnit, 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnitEntersChaosBossArena_Init () {
    gt_UnitEntersChaosBossArena = TriggerCreate("gt_UnitEntersChaosBossArena_Func");
    TriggerAddEventUnitRegion(gt_UnitEntersChaosBossArena, null, RegionFromId(27), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit Leaves Chaos Boss Arena
//--------------------------------------------------------------------------------------------------
bool gt_UnitLeavesChaosBossArena_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_eventUnit;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eventUnit = EventUnit();

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(lv_eventUnit, "IsInCoreArena") == true))) {
            return false;
        }

        if (!((UnitFilterMatch(lv_eventUnit, libCore_gv_cOMPUTER_TeamChaos, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(lv_eventUnit, "IsInCoreArena", c_unitBehaviorCountAll);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnitLeavesChaosBossArena_Init () {
    gt_UnitLeavesChaosBossArena = TriggerCreate("gt_UnitLeavesChaosBossArena_Func");
    TriggerAddEventUnitRegion(gt_UnitLeavesChaosBossArena, null, RegionFromId(27), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Order Boss Is Aggro
//--------------------------------------------------------------------------------------------------
bool gt_OrderBossIsAggro_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCore_gf_SendActorMessageToDoodadsInRegion("Signal Activate", RegionFromId(34), "Storm_FX_WCAV_BossLeashRingFX");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OrderBossIsAggro_Init () {
    gt_OrderBossIsAggro = TriggerCreate("gt_OrderBossIsAggro_Func");
    TriggerAddEventUnitBehaviorChange(gt_OrderBossIsAggro, UnitRefFromUnit(UnitFromId(62621071)), "JungleCreepPassive", c_unitBehaviorChangeDeactivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Chaos Boss Is Aggro
//--------------------------------------------------------------------------------------------------
bool gt_ChaosBossIsAggro_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCore_gf_SendActorMessageToDoodadsInRegion("Signal Activate", RegionFromId(26), "Storm_FX_WCAV_BossLeashRingFX");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChaosBossIsAggro_Init () {
    gt_ChaosBossIsAggro = TriggerCreate("gt_ChaosBossIsAggro_Func");
    TriggerAddEventUnitBehaviorChange(gt_ChaosBossIsAggro, UnitRefFromUnit(UnitFromId(1868035703)), "JungleCreepPassive", c_unitBehaviorChangeDeactivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Order Boss Leashes
//--------------------------------------------------------------------------------------------------
bool gt_OrderBossLeashes_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCore_gf_SendActorMessageToDoodadsInRegion("Signal Deactivate", RegionFromId(34), "Storm_FX_WCAV_BossLeashRingFX");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OrderBossLeashes_Init () {
    gt_OrderBossLeashes = TriggerCreate("gt_OrderBossLeashes_Func");
    TriggerAddEventUnitBehaviorChange(gt_OrderBossLeashes, UnitRefFromUnit(UnitFromId(62621071)), "JungleCreepPassive", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Chaos Boss Leashes
//--------------------------------------------------------------------------------------------------
bool gt_ChaosBossLeashes_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libCore_gf_SendActorMessageToDoodadsInRegion("Signal Deactivate", RegionFromId(26), "Storm_FX_WCAV_BossLeashRingFX");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChaosBossLeashes_Init () {
    gt_ChaosBossLeashes = TriggerCreate("gt_ChaosBossLeashes_Func");
    TriggerAddEventUnitBehaviorChange(gt_ChaosBossLeashes, UnitRefFromUnit(UnitFromId(1868035703)), "JungleCreepPassive", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_InitializeMap_Init();
    gt_UnitEntersOrderBossArena_Init();
    gt_UnitLeavesOrderBossArena_Init();
    gt_UnitEntersChaosBossArena_Init();
    gt_UnitLeavesChaosBossArena_Init();
    gt_OrderBossIsAggro_Init();
    gt_ChaosBossIsAggro_Init();
    gt_OrderBossLeashes_Init();
    gt_ChaosBossLeashes_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitTriggers();
}
